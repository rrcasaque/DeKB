/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  KnowledgeBaseContributor,
  KnowledgeBaseContributorInterface,
} from "../KnowledgeBaseContributor";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "contributionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "contributionURL",
        type: "string",
      },
    ],
    name: "ContributionAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_contributionURL",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "_tags",
        type: "string[]",
      },
    ],
    name: "addContribution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "contributions",
    outputs: [
      {
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "contributionURL",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "contributorContributions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllContributions",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contributorAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "contributionURL",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "tags",
            type: "string[]",
          },
        ],
        internalType: "struct KnowledgeBaseContributor.Contribution[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_contributionId",
        type: "uint256",
      },
    ],
    name: "getContribution",
    outputs: [
      {
        internalType: "address",
        name: "contributorAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "contributionURL",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "tags",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contributor",
        type: "address",
      },
    ],
    name: "getContributionsByContributor",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalContributions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611919806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063cef422541161005b578063cef4225414610102578063d602600c14610135578063ddf556d014610165578063f6f219a5146101835761007d565b80631cee070014610082578063230eb9d7146100b457806337f3061d146100e4575b600080fd5b61009c60048036038101906100979190610b4d565b6101b3565b6040516100ab93929190610c5a565b60405180910390f35b6100ce60048036038101906100c99190610cc4565b610285565b6040516100db9190610daf565b60405180910390f35b6100ec61031c565b6040516100f99190611018565b60405180910390f35b61011c60048036038101906101179190610b4d565b6105aa565b60405161012c94939291906110c0565b60405180910390f35b61014f600480360381019061014a91906111ce565b610767565b60405161015c919061124f565b60405180910390f35b61016d6109b0565b60405161017a919061124f565b60405180910390f35b61019d6004803603810190610198919061126a565b6109ba565b6040516101aa919061124f565b60405180910390f35b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002018054610202906112d9565b80601f016020809104026020016040519081016040528092919081815260200182805461022e906112d9565b801561027b5780601f106102505761010080835404028352916020019161027b565b820191906000526020600020905b81548152906001019060200180831161025e57829003601f168201915b5050505050905083565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561031057602002820191906000526020600020905b8154815260200190600101908083116102fc575b50505050509050919050565b60606000600254905060008167ffffffffffffffff8111156103415761034061130a565b5b60405190808252806020026020018201604052801561037a57816020015b6103676109eb565b81526020019060019003908161035f5790505b50905060005b828110156105a1576000808281526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282018054610415906112d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610441906112d9565b801561048e5780601f106104635761010080835404028352916020019161048e565b820191906000526020600020905b81548152906001019060200180831161047157829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b828210156105685783829060005260206000200180546104db906112d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610507906112d9565b80156105545780601f1061052957610100808354040283529160200191610554565b820191906000526020600020905b81548152906001019060200180831161053757829003601f168201915b5050505050815260200190600101906104bc565b505050508152505082828151811061058357610582611339565b5b6020026020010181905250808061059990611397565b915050610380565b50809250505090565b600080606080600080600087815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600101548260020183600301818054610604906112d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610630906112d9565b801561067d5780601f106106525761010080835404028352916020019161067d565b820191906000526020600020905b81548152906001019060200180831161066057829003601f168201915b5050505050915080805480602002602001604051908101604052809291908181526020016000905b828210156107515783829060005260206000200180546106c4906112d9565b80601f01602080910402602001604051908101604052809291908181526020018280546106f0906112d9565b801561073d5780601f106107125761010080835404028352916020019161073d565b820191906000526020600020905b81548152906001019060200180831161072057829003601f168201915b5050505050815260200190600101906106a5565b5050505090509450945094509450509193509193565b60008085859050116107ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a59061142b565b60405180910390fd5b6000600254905060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200185859061083991906115ff565b81525060008083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190816108b491906117c0565b5060608201518160030190805190602001906108d1929190610a29565b50905050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150556002600081548092919061094e90611397565b91905055503373ffffffffffffffffffffffffffffffffffffffff16817f11f2ee4f1abffcf77b92a10f59cacf2fdd6346cd9f07c4e384ac751a992be734888860405161099c9291906118bf565b60405180910390a380915050949350505050565b6000600254905090565b600160205281600052604060002081815481106109d657600080fd5b90600052602060002001600091509150505481565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160608152602001606081525090565b828054828255906000526020600020908101928215610a71579160200282015b82811115610a70578251829081610a6091906117c0565b5091602001919060010190610a49565b5b509050610a7e9190610a82565b5090565b5b80821115610aa25760008181610a999190610aa6565b50600101610a83565b5090565b508054610ab2906112d9565b6000825580601f10610ac45750610ae3565b601f016020900490600052602060002090810190610ae29190610ae6565b5b50565b5b80821115610aff576000816000905550600101610ae7565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610b2a81610b17565b8114610b3557600080fd5b50565b600081359050610b4781610b21565b92915050565b600060208284031215610b6357610b62610b0d565b5b6000610b7184828501610b38565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ba582610b7a565b9050919050565b610bb581610b9a565b82525050565b610bc481610b17565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c04578082015181840152602081019050610be9565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c2c82610bca565b610c368185610bd5565b9350610c46818560208601610be6565b610c4f81610c10565b840191505092915050565b6000606082019050610c6f6000830186610bac565b610c7c6020830185610bbb565b8181036040830152610c8e8184610c21565b9050949350505050565b610ca181610b9a565b8114610cac57600080fd5b50565b600081359050610cbe81610c98565b92915050565b600060208284031215610cda57610cd9610b0d565b5b6000610ce884828501610caf565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610d2681610b17565b82525050565b6000610d388383610d1d565b60208301905092915050565b6000602082019050919050565b6000610d5c82610cf1565b610d668185610cfc565b9350610d7183610d0d565b8060005b83811015610da2578151610d898882610d2c565b9750610d9483610d44565b925050600181019050610d75565b5085935050505092915050565b60006020820190508181036000830152610dc98184610d51565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610e0681610b9a565b82525050565b600082825260208201905092915050565b6000610e2882610bca565b610e328185610e0c565b9350610e42818560208601610be6565b610e4b81610c10565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000610e8e8383610e1d565b905092915050565b6000602082019050919050565b6000610eae82610e56565b610eb88185610e61565b935083602082028501610eca85610e72565b8060005b85811015610f065784840389528151610ee78582610e82565b9450610ef283610e96565b925060208a01995050600181019050610ece565b50829750879550505050505092915050565b6000608083016000830151610f306000860182610dfd565b506020830151610f436020860182610d1d565b5060408301518482036040860152610f5b8282610e1d565b91505060608301518482036060860152610f758282610ea3565b9150508091505092915050565b6000610f8e8383610f18565b905092915050565b6000602082019050919050565b6000610fae82610dd1565b610fb88185610ddc565b935083602082028501610fca85610ded565b8060005b858110156110065784840389528151610fe78582610f82565b9450610ff283610f96565b925060208a01995050600181019050610fce565b50829750879550505050505092915050565b600060208201905081810360008301526110328184610fa3565b905092915050565b600082825260208201905092915050565b600061105682610e56565b611060818561103a565b93508360208202850161107285610e72565b8060005b858110156110ae578484038952815161108f8582610e82565b945061109a83610e96565b925060208a01995050600181019050611076565b50829750879550505050505092915050565b60006080820190506110d56000830187610bac565b6110e26020830186610bbb565b81810360408301526110f48185610c21565b90508181036060830152611108818461104b565b905095945050505050565b600080fd5b600080fd5b600080fd5b60008083601f84011261113857611137611113565b5b8235905067ffffffffffffffff81111561115557611154611118565b5b6020830191508360018202830111156111715761117061111d565b5b9250929050565b60008083601f84011261118e5761118d611113565b5b8235905067ffffffffffffffff8111156111ab576111aa611118565b5b6020830191508360208202830111156111c7576111c661111d565b5b9250929050565b600080600080604085870312156111e8576111e7610b0d565b5b600085013567ffffffffffffffff81111561120657611205610b12565b5b61121287828801611122565b9450945050602085013567ffffffffffffffff81111561123557611234610b12565b5b61124187828801611178565b925092505092959194509250565b60006020820190506112646000830184610bbb565b92915050565b6000806040838503121561128157611280610b0d565b5b600061128f85828601610caf565b92505060206112a085828601610b38565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112f157607f821691505b602082108103611304576113036112aa565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113a282610b17565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113d4576113d3611368565b5b600182019050919050565b7f436f6e747269627574696f6e2055524c2063616e6e6f7420626520656d707479600082015250565b6000611415602083610bd5565b9150611420826113df565b602082019050919050565b6000602082019050818103600083015261144481611408565b9050919050565b61145482610c10565b810181811067ffffffffffffffff821117156114735761147261130a565b5b80604052505050565b6000611486610b03565b9050611492828261144b565b919050565b600067ffffffffffffffff8211156114b2576114b161130a565b5b602082029050602081019050919050565b600080fd5b600067ffffffffffffffff8211156114e3576114e261130a565b5b6114ec82610c10565b9050602081019050919050565b82818337600083830152505050565b600061151b611516846114c8565b61147c565b905082815260208101848484011115611537576115366114c3565b5b6115428482856114f9565b509392505050565b600082601f83011261155f5761155e611113565b5b813561156f848260208601611508565b91505092915050565b600061158b61158684611497565b61147c565b905080838252602082019050602084028301858111156115ae576115ad61111d565b5b835b818110156115f557803567ffffffffffffffff8111156115d3576115d2611113565b5b8086016115e0898261154a565b855260208501945050506020810190506115b0565b5050509392505050565b600061160c368484611578565b905092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026116767fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611639565b6116808683611639565b95508019841693508086168417925050509392505050565b6000819050919050565b60006116bd6116b86116b384610b17565b611698565b610b17565b9050919050565b6000819050919050565b6116d7836116a2565b6116eb6116e3826116c4565b848454611646565b825550505050565b600090565b6117006116f3565b61170b8184846116ce565b505050565b5b8181101561172f576117246000826116f8565b600181019050611711565b5050565b601f8211156117745761174581611614565b61174e84611629565b8101602085101561175d578190505b61177161176985611629565b830182611710565b50505b505050565b600082821c905092915050565b600061179760001984600802611779565b1980831691505092915050565b60006117b08383611786565b9150826002028217905092915050565b6117c982610bca565b67ffffffffffffffff8111156117e2576117e161130a565b5b6117ec82546112d9565b6117f7828285611733565b600060209050601f83116001811461182a5760008415611818578287015190505b61182285826117a4565b86555061188a565b601f19841661183886611614565b60005b828110156118605784890151825560018201915060208501945060208101905061183b565b8683101561187d5784890151611879601f891682611786565b8355505b6001600288020188555050505b505050505050565b600061189e8385610bd5565b93506118ab8385846114f9565b6118b483610c10565b840190509392505050565b600060208201905081810360008301526118da818486611892565b9050939250505056fea26469706673582212203f97a26df9290a2eaa2e5f264aa99d8286ce7f6761e990a519deda0ad60b880d64736f6c63430008140033";

type KnowledgeBaseContributorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KnowledgeBaseContributorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KnowledgeBaseContributor__factory extends ContractFactory {
  constructor(...args: KnowledgeBaseContributorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      KnowledgeBaseContributor & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): KnowledgeBaseContributor__factory {
    return super.connect(runner) as KnowledgeBaseContributor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KnowledgeBaseContributorInterface {
    return new Interface(_abi) as KnowledgeBaseContributorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): KnowledgeBaseContributor {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as KnowledgeBaseContributor;
  }
}
